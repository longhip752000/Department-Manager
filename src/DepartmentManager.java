import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import javax.swing.JOptionPane;
import java.io.*;
import java.util.StringTokenizer;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Locale;
public class DepartmentManager extends javax.swing.JFrame {
    String filename = "employees2.txt";
    DefaultMutableTreeNode root = null;
    DefaultMutableTreeNode curDepNode = null;
    DefaultMutableTreeNode curEmpNode = null;
    boolean addNewDep = false;
    boolean addNewEmp = false;
    
    public DepartmentManager() {
        initComponents();
        this.setSize(1000, 580);
        root = (DefaultMutableTreeNode)(this.tree.getModel().getRoot());
        loadData();
        TreePath path = new TreePath(root);
        tree.expandPath(path);
    }
    
    private void loadData(){
        String S = "";
        StringTokenizer stk;
        try {
            FileReader f = new FileReader(filename);
            BufferedReader bf = new BufferedReader(f);
            while((S = bf.readLine()) != null){
                S = S.trim();
                boolean isDept = (S.charAt(S.length() - 1) == ':');
                stk = new StringTokenizer(S, "-:,");
                String code = stk.nextToken().trim();
                String name = stk.nextToken().trim();
                if (isDept) {
                    curDepNode = new DefaultMutableTreeNode(new Department(code, name));
                    root.add(curDepNode);
                }    
                else{
                    int salary = Integer.parseInt(stk.nextToken().trim());
                    curEmpNode = new DefaultMutableTreeNode(new Employee(code, name, salary));
                    curDepNode.add(curEmpNode);
                    }
                }
            bf.close();
            f.close();
        } catch (Exception e) {
        e.printStackTrace();
        }
    }
    
    private void viewDeptAndEmp(){
        Department curDep = null; 
        Employee curEmp = null;
        if(curDepNode != null){
            curDep = (Department) (curDepNode.getUserObject());
        }
        if(curEmpNode != null){
            curEmp = (Employee)(curEmpNode.getUserObject());
        }
        this.txtDepCode.setText(curDep != null ?curDep.getDepCode() : "");
        this.txtDepName.setText(curDep != null ? curDep.getDepName() : "");
        this.txtEmpCode.setText(curEmp != null ? curEmp.getEmpCode() : "");
        this.txtEmpName.setText(curEmp != null ? curEmp.getEmpName() : "");
        this.txtSalary.setText("" + (curEmp != null ? curEmp.getSalary() : ""));
        this.txtDepCode.setEditable(false);
        this.txtEmpCode.setEditable(false);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        pDep = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDepCode = new javax.swing.JTextField();
        txtDepName = new javax.swing.JTextField();
        btnDepNew = new javax.swing.JButton();
        btnDepRemove = new javax.swing.JButton();
        btnDepSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnEmpNew = new javax.swing.JButton();
        btnEmpRemove = new javax.swing.JButton();
        btnEmpSave = new javax.swing.JButton();
        txtEmpCode = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        btnSaveFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Departments");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        pDep.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Dept. Code");

        jLabel2.setText("Dept. Name");

        txtDepName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepNameActionPerformed(evt);
            }
        });

        btnDepNew.setText("New");
        btnDepNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepNewActionPerformed(evt);
            }
        });

        btnDepRemove.setText("Remove");
        btnDepRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepRemoveActionPerformed(evt);
            }
        });

        btnDepSave.setText("Save");
        btnDepSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pDepLayout = new javax.swing.GroupLayout(pDep);
        pDep.setLayout(pDepLayout);
        pDepLayout.setHorizontalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(btnDepNew))
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDepCode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnDepRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(btnDepSave, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        pDepLayout.setVerticalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtDepCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2))
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDepNew)
                    .addComponent(btnDepRemove)
                    .addComponent(btnDepSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Emp. Code");

        jLabel4.setText("Emp. Name");

        jLabel5.setText("Salary");

        btnEmpNew.setText("New");
        btnEmpNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpNewActionPerformed(evt);
            }
        });

        btnEmpRemove.setText("Remove");
        btnEmpRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpRemoveActionPerformed(evt);
            }
        });

        btnEmpSave.setText("Save");
        btnEmpSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpCode)
                            .addComponent(txtEmpName)
                            .addComponent(txtSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEmpNew)
                        .addGap(67, 67, 67)
                        .addComponent(btnEmpRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(btnEmpSave)
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmpCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEmpNew)
                    .addComponent(btnEmpRemove)
                    .addComponent(btnEmpSave))
                .addGap(45, 45, 45))
        );

        btnSaveFile.setText("Save to file");
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSaveFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(btnSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        tree.cancelEditing();
        TreePath path = tree.getSelectionPath();
        if(path==null)return;
        DefaultMutableTreeNode selectedNode = null;
        selectedNode = (DefaultMutableTreeNode)(path.getLastPathComponent());
        Object selectedObj = selectedNode.getUserObject();
        if(selectedNode==root)
            this.curDepNode = this.curEmpNode=null;
        else{
            if(selectedObj instanceof Department){
                this.curDepNode = selectedNode;
                this.curEmpNode = null;
            }
            else if (selectedObj instanceof Employee){
                curEmpNode = selectedNode;
                curDepNode = (DefaultMutableTreeNode)(selectedNode.getParent());
            }
        }
        viewDeptAndEmp();
    }//GEN-LAST:event_treeMouseClicked

    private void btnDepNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepNewActionPerformed
        this.addNewDep = true;
        this.txtDepCode.setText("");
        this.txtDepName.setText("");
        this.txtEmpCode.setText("");
        this.txtEmpName.setText("");
        this.txtSalary.setText("");
        this.txtDepCode.setEditable(true);
        this.txtDepCode.requestFocus();
    }//GEN-LAST:event_btnDepNewActionPerformed

    private void btnDepRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepRemoveActionPerformed
        if(this.curDepNode.getChildCount() > 0){
            String msg = "Remove all employees before deleting a department.";
            JOptionPane.showMessageDialog(this, msg);
        }
        else{
            int reponse = JOptionPane.showConfirmDialog(this, "Delete this department- OK?");
            if(reponse==JOptionPane.OK_OPTION){
                root.remove(this.curDepNode);
                tree.updateUI();
            }
        }
    }//GEN-LAST:event_btnDepRemoveActionPerformed

    private boolean validDepDetails(){
        return true;
    }
    private void btnDepSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepSaveActionPerformed
        String code = this.txtDepCode.getText().trim().toUpperCase();
        txtDepCode.setText(code);
        String name = this.txtDepName.getText().trim();
        txtDepName.setText(name);
        if(!validDepDetails()) return;
        if(addNewDep==true){
            Department newDep = new Department(code, name);
            root.add(new DefaultMutableTreeNode (newDep)); 
        }
        else{
            ((Department)curDepNode.getUserObject()).setDepName(name);
        }
        this.tree.updateUI();
        this.addNewDep=false;
    }//GEN-LAST:event_btnDepSaveActionPerformed

    private void btnEmpNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpNewActionPerformed
        this.addNewEmp  = true;
        this.txtEmpCode.setText("");
        this.txtEmpName.setText("");
        this.txtSalary.setText("");
        this.txtEmpCode.setEditable(true);
        this.txtEmpCode.requestFocus();
    }//GEN-LAST:event_btnEmpNewActionPerformed

    private void btnEmpRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpRemoveActionPerformed
        if(this.curEmpNode != null){
            int reponse = JOptionPane.showConfirmDialog(this, "Delete this employee- OK?");
            if(reponse == JOptionPane.OK_OPTION){
                curDepNode.remove(this.curEmpNode);
                tree.updateUI();
            }
        }
    }//GEN-LAST:event_btnEmpRemoveActionPerformed
    
    private boolean validEmpDetails(){
        return true;
    }
    private void btnEmpSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpSaveActionPerformed
        String code = this.txtEmpCode.getText().trim().toUpperCase();
        txtEmpCode.setText(code);
        String name = this.txtEmpName.getText().trim();
        txtEmpName.setText(name);
        String salaryStr = this.txtSalary.getText().trim();
        txtSalary.setText(salaryStr);
        int sal = Integer.parseInt(salaryStr);
        if(! validDepDetails()) return;
        if(addNewEmp==true){
            Employee newEmp = new Employee(code, name, sal);
            curDepNode.add(new DefaultMutableTreeNode (newEmp));
        }
        else {
            Employee emp =(Employee)(curDepNode.getUserObject());
            emp.setEmpName(name);
            emp.setSalary(sal);
        }
        this.tree.updateUI();
        this.addNewEmp = false;
    }//GEN-LAST:event_btnEmpSaveActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
        if(root.getChildCount() == 0) return;
        String S;
        try {
            FileWriter f = new FileWriter(filename);
            PrintWriter pf = new PrintWriter(f);
            Enumeration depts = root.children();
            while(depts.hasMoreElements()){
                DefaultMutableTreeNode depNode = (DefaultMutableTreeNode)depts.nextElement();
                Department dept = (Department)(depNode.getUserObject());
                S  = dept.getDepCode() + "-" + dept.getDepName() + ":";
                pf.println(S);
                Enumeration emps = depNode.children();
                while(emps.hasMoreElements()){
                    DefaultMutableTreeNode empNode = (DefaultMutableTreeNode) emps.nextElement();
                    Employee emp = (Employee) (empNode.getUserObject());
                    S = emp.getEmpCode() + "," + emp.getEmpName() + "," + emp.getSalary();
                    pf.println(S);  
                }
            }
            pf.close(); 
            f.close();
            JOptionPane.showMessageDialog(this, "Data are saved to the file" + filename);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void txtDepNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepNameActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepNew;
    private javax.swing.JButton btnDepRemove;
    private javax.swing.JButton btnDepSave;
    private javax.swing.JButton btnEmpNew;
    private javax.swing.JButton btnEmpRemove;
    private javax.swing.JButton btnEmpSave;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pDep;
    private javax.swing.JTree tree;
    private javax.swing.JTextField txtDepCode;
    private javax.swing.JTextField txtDepName;
    private javax.swing.JTextField txtEmpCode;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
